name: CI/CD Pipeline

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  # Build and test the application
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Restore dependencies
        run: dotnet restore BookingService.API/BookingService.API.csproj

      - name: Build
        run: dotnet build BookingService.API/BookingService.API.csproj --configuration Release --no-restore

      - name: Test
        run: dotnet test BookingService.API/BookingService.API.csproj --configuration Release --no-build

  # Build and push Docker image
  docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: BookingService.API/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/bookingservice-api:latest

  # Deploy the application
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: docker

    steps:
      - name: Deploy using SSH
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "*"
          target: "/var/www/bookingservice"

      - name: Restart Docker container
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/bookingservice-api:latest
            docker stop bookingservice-api || true
            docker rm bookingservice-api || true
            docker run -d --name bookingservice-api -p 80:80 ${{ secrets.DOCKER_HUB_USERNAME }}/bookingservice-api:latest
